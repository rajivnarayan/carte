#!/usr/bin/with-contenv bash

# Install Rstudio if true
# Specify with -e ADD_RSTUDIO=true
ADD_RSTUDIO=${ADD_RSTUDIO:=none}

# Rstudio operating system specify with -e RSTUDIO_OS=<ver>
: RSTUDIO_OS=${RSTUDIO_OS:?RSTUDIO_OS not set}
# Rstudio Version specify with -e RSTUDIO_VERSION=<ver>
: RSTUDIO_VERSION=${RSTUDIO_VERSION:?RSTUDIO_VERSION not set}

if [[ $RSTUDIO_VERSION == 'latest' ]]; then
 RSTUDIO_URL="https://www.rstudio.org/download/latest/stable/server/${RSTUDIO_OS}/rstudio-server-latest-amd64.deb"
else
 RSTUDIO_URL="http://download2.rstudio.org/server/${RSTUDIO_OS}/amd64/rstudio-server-${RSTUDIO_VERSION}-amd64.deb"
fi

# Verify if the URL exists
wget -q --method=HEAD "$RSTUDIO_URL"
URL_EXISTS=$?

if [[ $ADD_RSTUDIO == 'true' && $URL_EXISTS -eq 0 ]]; then
	echo "Installing RStudio server to the container..."

	export PATH=/usr/lib/rstudio-server/bin:$PATH

	## Download and install Rstudio
	apt-get update
	apt-get install -y --no-install-recommends gdebi-core git
	wget -q -O rstudio-server.deb "$RSTUDIO_URL"
	gdebi -n rstudio-server.deb
	rm rstudio-server.deb

	## Symlink pandoc & standard pandoc templates for use system-wide
	ln -sf /usr/lib/rstudio-server/bin/pandoc/pandoc /usr/local/bin
	ln -sf /usr/lib/rstudio-server/bin/pandoc/pandoc-citeproc /usr/local/bin
	git clone https://github.com/jgm/pandoc-templates
	mkdir -p /opt/pandoc/templates
	cp -r pandoc-templates*/* /opt/pandoc/templates && rm -rf pandoc-templates*
	mkdir -p /root/.pandoc && ln -sf /opt/pandoc/templates /root/.pandoc/templates
	apt-get clean
	rm -rf /var/lib/apt/lists/

	## RStudio wants an /etc/R, will populate from $R_HOME/etc
	mkdir -p /etc/R

	## Write config files in $R_HOME/etc
	echo -e '\n
	\n# Configure httr to perform out-of-band authentication if HTTR_LOCALHOST
	\n# is not set since a redirect to localhost may not work depending upon
	\n# where this Docker container is running.
	\nif(is.na(Sys.getenv("HTTR_LOCALHOST", unset=NA))) {
	\n  options(httr_oob_default = TRUE)
	\n}' >> /usr/lib/R/etc/Rprofile.site

	echo "PATH=${PATH}" >> /usr/lib/R/etc/Renviron

	## use more robust file locking to avoid errors when using shared volumes:
	echo 'lock-type=advisory' >> /etc/rstudio/file-locks
	## configure git not to request password each time
	git config --system credential.helper 'cache --timeout=3600'
	git config --system push.default simple
  else
	if [[ $URL_EXISTS -ne 0 ]]; then
		echo -e "$RSTUDIO_URL does not exist!\n
Ensure that the specified version exists\n
Not installing Rstudio"
	elif [[ $ADD_RSTUDIO != 'true' ]]; then
  	echo "Not installing RStudio since ADD_RSTUDIO not specified
To install at run time specify -e ADD_RSTUDIO=true to the Docker run command.
To install within a container run:
export ADD_RSTUDIO=true && bash /etc/cont-init.d/add_rstudio"
	  fi
  fi
